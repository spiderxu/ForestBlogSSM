<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ssm.blog.mapper.UserMapper">
    <!-- 配置数据库字段与Java类中属性映射-->
    <resultMap id="BaseResultMap" type="com.ssm.blog.entity.User">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_pass" property="userPass" jdbcType="VARCHAR"/>
        <result column="user_nickname" property="userNickname" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_url" property="userUrl" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
        <result column="user_last_login_ip" property="userLastLoginIp" jdbcType="VARCHAR"/>
        <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP"/>
        <result column="user_last_login_time" property="userLastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="user_status" property="userStatus" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 罗列出数据库中的字段-->
    <sql id="Base_Column_List">
        user_id,user_name,user_pass,user_nickname,user_email,
        user_url,user_avatar,user_last_login_ip,user_register_time,
        user_last_login_time,user_status
    </sql>


    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from user where user_id =#{userId}
    </delete>

    <insert id="insert" parameterType="com.ssm.blog.entity.User" useGeneratedKeys="true" keyProperty="userId">
        insert into
        user
        (user_id, user_name, user_pass,
        user_nickname, user_email, user_url,
        user_avatar, user_last_login_ip, user_register_time,
        user_last_login_time, user_status)
        values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR},
        #{userNickname,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userUrl,jdbcType=VARCHAR},
        #{userAvatar,jdbcType=VARCHAR}, #{userLastLoginIp,jdbcType=VARCHAR}, #{userRegisterTime,jdbcType=TIMESTAMP},
        #{userLastLoginTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=INTEGER})
    </insert>

    <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id =#{userId}
    </select>

    <update id="update" parameterType="com.ssm.blog.entity.User">
       update user
       <set>
           <if test="userName != null">user_name = #{userName,jdbcType=VARCHAR},</if>
           <if test="userPass != null">user_pass = #{userPass,jdbcType=VARCHAR},</if>
           <if test="userNickname != null">user_nickname = #{userNickname,jdbcType=VARCHAR},</if>
           <if test="userEmail != null">user_email = #{userEmail,jdbcType=VARCHAR},</if>
           <if test="userUrl != null">user_url = #{userUrl,jdbcType=VARCHAR},</if>
           <if test="userAvatar != null">user_avatar = #{userAvatar,jdbcType=VARCHAR},</if>
           <if test="userLastLoginIp != null">user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},</if>
           <if test="userRegisterTime != null">user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},</if>
           <if test="userLastLoginTime != null">user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},</if>
           <if test="userStatus != null">user_status = #{userStatus,jdbcType=INTEGER},</if>
       </set>
       where user_id =#{userId,jdbcType=INTEGER}
    </update>

    <select id="listUser"  resultType="com.ssm.blog.entity.User">
        select
        <include refid="Base_Column_List"/>
        from user
        order by `user_status` asc
    </select>

    <select id="getUserByNameOrEmail" parameterType="java.lang.String" resultType="com.ssm.blog.entity.User">
       select
       <include refid="Base_Column_List"/>
       from user
       <where>
           user_name=#{str} OR user_email=#{str}
       </where>
       and user_status>0
       limit 1
    </select>

    <select id="getUserByName" parameterType="java.lang.String" resultType="com.ssm.blog.entity.User">
       select
       <include refid="Base_Column_List"></include>
       from user
       where user_name =#{name}
       limit 1
    </select>

    <select id="getUserByEmail" parameterType="java.lang.String" resultType="com.ssm.blog.entity.User">
        select
        <include refid="Base_Column_List"></include>
        from user
        where user_email =#{email}
        limit 1
    </select>
</mapper>